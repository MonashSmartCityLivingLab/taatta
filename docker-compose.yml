services:
  collector:
    image: ghcr.io/monashsmartcitylivinglab/taatta-collector:main
    build:
      context: .
      target: collector
    command: java -jar -Dspring.profiles.active=prod /usr/local/taatta/collector.jar
    environment:
      - TAATTA_MOSQUITTO_HOST=${TAATTA_MOSQUITTO_HOST}
      - TAATTA_MOSQUITTO_PORT=${TAATTA_MOSQUITTO_PORT}
      - TAATTA_MOSQUITTO_USER=${TAATTA_MOSQUITTO_USER}
      - TAATTA_MOSQUITTO_PASSWORD=${TAATTA_MOSQUITTO_PASSWORD}
      - TAATTA_SENSOR_ROUTERS=/taatta/collector/sensorRouters.json
    depends_on:
      mosquitto:
        condition: service_started
    restart: unless-stopped
    volumes:
      - ./configuration/collector/sensorRouters.json:/taatta/collector/sensorRouters.json:ro
  athom-presence-sensor:
    image: ghcr.io/monashsmartcitylivinglab/taatta-athom-presence-sensor:main
    build:
      context: .
      target: athom-presence-sensor
    command: java -jar -Dspring.profiles.active=prod /usr/local/taatta/athom-presence-sensor.jar
    ports:
      - 4052:4052
    environment:
      - TAATTA_POSTGRES_HOST=${TAATTA_POSTGRES_HOST}
      - TAATTA_POSTGRES_PORT=${TAATTA_POSTGRES_PORT}
      - TAATTA_POSTGRES_USER=${TAATTA_POSTGRES_USER}
      - TAATTA_POSTGRES_PASSWORD=${TAATTA_POSTGRES_PASSWORD}
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: "curl --fail --silent localhost:4052/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
  athom-smart-plug:
    image: ghcr.io/monashsmartcitylivinglab/taatta-athom-smart-plug:main
    build:
      context: .
      target: athom-smart-plug
    command: java -jar -Dspring.profiles.active=prod /usr/local/taatta/athom-smart-plug.jar
    ports:
      - 4050:4050
    environment:
      - TAATTA_POSTGRES_HOST=${TAATTA_POSTGRES_HOST}
      - TAATTA_POSTGRES_PORT=${TAATTA_POSTGRES_PORT}
      - TAATTA_POSTGRES_USER=${TAATTA_POSTGRES_USER}
      - TAATTA_POSTGRES_PASSWORD=${TAATTA_POSTGRES_PASSWORD}
    depends_on:
      postgresql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: "curl --fail --silent localhost:4050/actuator/health | grep UP || exit 1"
      interval: 5s
      timeout: 5s
      retries: 5
  # Chirpstack containers
  # Based on the official template docker-compose.yml at
  # https://github.com/chirpstack/chirpstack-docker/blob/v3/docker-compose.yml
  chirpstack-network-server:
    image: chirpstack/chirpstack-network-server:3
    volumes:
      - ./configuration/chirpstack-network-server/chirpstack-network-server.toml:/etc/chirpstack-network-server/chirpstack-network-server.toml
    depends_on:
      postgresql:
        condition: service_healthy
      mosquitto:
        condition: service_started
  chirpstack-application-server:
    image: chirpstack/chirpstack-application-server:3
    ports:
      - 8080:8080
    volumes:
      - ./configuration/chirpstack-application-server/chirpstack-application-server.toml:/etc/chirpstack-application-server/chirpstack-application-server.toml
    depends_on:
      - chirpstack-network-server
  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:3
    ports:
      - 1700:1700/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge/chirpstack-gateway-bridge.toml:/etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge.toml
    depends_on:
      - mosquitto
  postgresql:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=${TAATTA_POSTGRES_PASSWORD}
      - TAATTA_POSTGRES_USER=${TAATTA_POSTGRES_USER}
      - TAATTA_POSTGRES_PASSWORD=${TAATTA_POSTGRES_PASSWORD}
      - CHIRPSTACK_POSTGRES_PASSWORD=${TAATTA_POSTGRES_PASSWORD}
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data
    # Uncomment to expose ports
#    ports:
#      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  redis:
    image: redis:5-alpine
    volumes:
      - redisdata:/data
  mosquitto:
    image: ghcr.io/monashsmartcitylivinglab/taatta-mosquitto:main
    build:
      context: .
      target: mosquitto
    ports:
      - 1883:1883
    volumes:
      - ./configuration/eclipse-mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    environment:
      - TAATTA_MOSQUITTO_USER=${TAATTA_MOSQUITTO_USER}
      - TAATTA_MOSQUITTO_PASSWORD=${TAATTA_MOSQUITTO_PASSWORD}
    restart: unless-stopped
    entrypoint: sh ./entrypoint.sh
    command: ["/usr/sbin/mosquitto","-c","/mosquitto/config/mosquitto.conf"]
  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
  grafana:
    image: grafana/grafana-oss
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafanadata:/var/lib/grafana
    networks:
      - loki

volumes:
  postgresqldata:
  redisdata:
  grafanadata:

networks:
  loki: